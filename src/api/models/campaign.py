"""Customer Schemas."""
# Third-Party Libraries
from marshmallow import fields, validate

# cisagov Libraries
from api import util
from api.models.base import BaseSchema
from api.models.base_model_ import Model
from api.models.fields import DateTimeField

# from datetime import date, datetime  # noqa: F401
# from typing import Dict, List  # noqa: F401


class Campaign(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        assessment_uuid: str = None,
        target_template_uuid: str = None,
        email_template_uuid: str = None,
        status: str = None,
    ):  # noqa: E501
        """Initialize the Campaign model defined in Swagger.

        :param parent_uuid: The parent_uuid of this Campaign.  # noqa: E501
        :type parent_uuid: str
        :param target_template_uuid: The target_template_uuid of this Campaign.  # noqa: E501
        :type target_template_uuid: str
        :param email_template_uuid: The email_template_uuid of this Campaign.  # noqa: E501
        :type email_template_uuid: str
        :param status: The status of this Campaign.  # noqa: E501
        :type status: str
        """
        self.swagger_types = {
            "assessment_uuid": str,
            "target_template_uuid": str,
            "email_template_uuid": str,
            "status": str,
        }  # type: ignore

        self.attribute_map = {
            "assessment_uuid": "parent_uuid",
            "target_template_uuid": "target_template_uuid",
            "email_template_uuid": "email_template_uuid",
            "status": "status",
        }  # type: ignore
        self._assessment_uuid = assessment_uuid
        self._target_template_uuid = target_template_uuid
        self._email_template_uuid = email_template_uuid
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> "Campaign":
        """Return the dict as a model.

        :param dikt: A dict.
        :type: dict
        :return: The Campaign of this Campaign.  # noqa: E501
        :rtype: Campaign
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment_uuid(self) -> str:
        """Get the assessment_uuid of this Campaign.

        :return: The assessment_uuid of this Campaign.
        :rtype: str
        """
        return self._assessment_uuid  # type: ignore

    @assessment_uuid.setter
    def assessment_uuid(self, assessment_uuid: str):
        """Set the assessment_uuid of this Campaign.

        :param assessment_uuid: The assessment_uuid of this Campaign.
        :type assessment_uuid: str
        """
        if assessment_uuid is None:
            raise ValueError(
                "Invalid value for `parent_uuid`, must not be `None`"
            )  # noqa: E501

        self._assessment_uuid = assessment_uuid

    @property
    def target_template_uuid(self) -> str:
        """Get the target_template_uuid of this Campaign.

        uuid of associated template  # noqa: E501

        :return: The target_template_uuid of this Campaign.
        :rtype: str
        """
        return self._target_template_uuid  # type: ignore

    @target_template_uuid.setter
    def target_template_uuid(self, target_template_uuid: str):
        """Set the target_template_uuid of this Campaign.

        uuid of associated template  # noqa: E501

        :param target_template_uuid: The target_template_uuid of this Campaign.
        :type target_template_uuid: str
        """
        self._target_template_uuid = target_template_uuid

    @property
    def email_template_uuid(self) -> str:
        """Get the email_template_uuid of this Campaign.

        uuid of associated template  # noqa: E501

        :return: The email_template_uuid of this Campaign.
        :rtype: str
        """
        return self._email_template_uuid  # type: ignore

    @email_template_uuid.setter
    def email_template_uuid(self, email_template_uuid: str):
        """Set the email_template_uuid of this Campaign.

        uuid of associated template  # noqa: E501

        :param email_template_uuid: The email_template_uuid of this Campaign.
        :type email_template_uuid: str
        """
        self._email_template_uuid = email_template_uuid

    @property
    def status(self) -> str:
        """Get the status of this Campaign.

        campaign status in the data store  # noqa: E501

        :return: The status of this Campaign.
        :rtype: str
        """
        return self._status  # type: ignore

    @status.setter
    def status(self, status: str):
        """Set the status of this Campaign."""
        self._status = status


class CampaignSchema(BaseSchema):
    """Campaign Schema."""

    assessment_uuid = fields.Str()
    description = fields.Str()
    end_datetime = DateTimeField()
    name = fields.Str()
    start_datetime = DateTimeField()
    status = fields.Str(
        validate=validate.OneOf(["queued", "running", "completed", "error"])
    )
    target_template_uuid = fields.Str()
    email_template_uuid = fields.Str()
    target_count = fields.Int()
    archived = fields.Bool()
